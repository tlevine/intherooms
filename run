#!/bin/sh
set -e

# Activate
env|grep '^IN_THE_ROOMS_ROOT=' || . ./activate

# Go through search pages
for page in $(seq 1 400); do
    # Skip things that have already been downloaded.
    [ -e "$IN_THE_ROOMS_ROOT/searches/$page.html" ] && continue

    # Download a webpage.
    ./download_search.py $page

    # Test that it worked.
    if ! grep '<span class="current">'$page'</span>' \
        "$IN_THE_ROOMS_ROOT/searches/$page.html" > /dev/null; then
        mv "$IN_THE_ROOMS_ROOT/searches/$page.html" .last.html
        echo I stopped at page $page. If the script worked properly, this is because
        echo page $(($page - 1)) was the last page. Check .last.html to make sure.
        break
    fi

    sleep 1s
done

# This doesn't really detect the database's current state, so delete it and
# rebuild if something goes wrong.

# Schema
sqlite3 "$IN_THE_ROOMS_ROOT/intherooms.db" < schema.sql

# Parse those pages.
for page in $(ls searches/*|cut -d. -f1|cut -d\/ -f2); do
    ./parse_search.py $page
done

# Download meetings based on those pages
for meeting in $(sqlite3 intherooms.db 'SELECT "Meeting Title Link" FROM meeting_search'); do
    ./download_meeting.sh "$meeting"
    sleep 1s
done

# Download locations based on those pages
for location in $(sqlite3 intherooms.db 'SELECT DISTINCT "Location Link" FROM meeting_search'); do
    ./download_location.sh "$location"
    sleep 1s
done
